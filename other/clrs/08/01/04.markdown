> Suppose that you are given a sequence of $n$ elements to sort. The input
> sequence consists of $n/k$ subsequences, each containing $k$ elements. The
> elements in a given subsequence are all smaller than the elements in the
> succeeding subsequence and larger than the elements in the preceding
> subsequence. Thus, all that is needed to sort the whole sequence of length
> $n$ is to sort the $k$ elements in each of the $n/k$ subsequences. Show an
> $\Omega(n\lg{k})$ lower bound on the number of comparisons needed to solve
> this variant of the sorting problem. (<i>Hint:</i> It is not rigorous to
> simply combine the lower bounds for the individual subsequences.)

This is somehow tricky. There are $n/k$ subsequences and each can be ordered in
$k!$ ways. This makes a $(k!)^{n/k}$ outputs. We use the same reasoning:

$$ (k!)^{n/k} \le 2^h $$

Taking the logarithm of both sides, we get:

$$ \begin{aligned}
   h &\ge \lg(k!)^{n/k} \\\\
     &=   (n/k)\lg(k!) \\\\
     &\ge (n/k)(k/2)\lg(k/2) & \text{(ex 8.1.2)}\\\\
     &=   \frac{1}{2}n\lg{k} - \frac{1}{2}n \\\\
     &=   \Omega(n\lg{k})
   \end{aligned} $$
